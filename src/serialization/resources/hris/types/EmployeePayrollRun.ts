/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const EmployeePayrollRun: core.serialization.ObjectSchema<
    serializers.hris.EmployeePayrollRun.Raw,
    Merge.hris.EmployeePayrollRun
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    employee: core.serialization.string().optional(),
    payrollRun: core.serialization.property("payroll_run", core.serialization.string().optional()),
    grossPay: core.serialization.property("gross_pay", core.serialization.number().optional()),
    netPay: core.serialization.property("net_pay", core.serialization.number().optional()),
    startDate: core.serialization.property("start_date", core.serialization.string().optional()),
    endDate: core.serialization.property("end_date", core.serialization.string().optional()),
    checkDate: core.serialization.property("check_date", core.serialization.string().optional()),
    earnings: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).hris.Earning))
        .optional(),
    deductions: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).hris.Deduction))
        .optional(),
    taxes: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).hris.Tax))
        .optional(),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.string().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteData: core.serialization.property(
        "remote_data",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).hris.RemoteData))
            .optional()
    ),
});

export declare namespace EmployeePayrollRun {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        employee?: string | null;
        payroll_run?: string | null;
        gross_pay?: number | null;
        net_pay?: number | null;
        start_date?: string | null;
        end_date?: string | null;
        check_date?: string | null;
        earnings?: serializers.hris.Earning.Raw[] | null;
        deductions?: serializers.hris.Deduction.Raw[] | null;
        taxes?: serializers.hris.Tax.Raw[] | null;
        remote_was_deleted?: boolean | null;
        modified_at?: string | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: serializers.hris.RemoteData.Raw[] | null;
    }
}
