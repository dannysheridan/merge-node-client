/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const AvailableActions: core.serialization.ObjectSchema<
    serializers.accounting.AvailableActions.Raw,
    Merge.accounting.AvailableActions
> = core.serialization.object({
    integration: core.serialization.lazyObject(async () => (await import("../../..")).accounting.AccountIntegration),
    passthroughAvailable: core.serialization.property("passthrough_available", core.serialization.boolean()),
    availableModelOperations: core.serialization.property(
        "available_model_operations",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).accounting.ModelOperation))
            .optional()
    ),
});

export declare namespace AvailableActions {
    interface Raw {
        integration: serializers.accounting.AccountIntegration.Raw;
        passthrough_available: boolean;
        available_model_operations?: serializers.accounting.ModelOperation.Raw[] | null;
    }
}
