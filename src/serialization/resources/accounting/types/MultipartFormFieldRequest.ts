/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const MultipartFormFieldRequest: core.serialization.ObjectSchema<
    serializers.accounting.MultipartFormFieldRequest.Raw,
    Merge.accounting.MultipartFormFieldRequest
> = core.serialization.object({
    name: core.serialization.string(),
    data: core.serialization.string(),
    encoding: core.serialization
        .lazy(async () => (await import("../../..")).accounting.MultipartFormFieldRequestEncoding)
        .optional(),
    fileName: core.serialization.property("file_name", core.serialization.string().optional()),
    contentType: core.serialization.property("content_type", core.serialization.string().optional()),
});

export declare namespace MultipartFormFieldRequest {
    interface Raw {
        name: string;
        data: string;
        encoding?: serializers.accounting.MultipartFormFieldRequestEncoding.Raw | null;
        file_name?: string | null;
        content_type?: string | null;
    }
}
