/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const ExpenseLineRequest: core.serialization.ObjectSchema<
    serializers.accounting.ExpenseLineRequest.Raw,
    Merge.accounting.ExpenseLineRequest
> = core.serialization.object({
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    item: core.serialization.lazy(async () => (await import("../../..")).accounting.ExpenseLineRequestItem).optional(),
    netAmount: core.serialization.property("net_amount", core.serialization.number().optional()),
    trackingCategory: core.serialization.property(
        "tracking_category",
        core.serialization
            .lazy(async () => (await import("../../..")).accounting.ExpenseLineRequestTrackingCategory)
            .optional()
    ),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization
            .list(
                core.serialization
                    .lazy(async () => (await import("../../..")).accounting.ExpenseLineRequestTrackingCategoriesItem)
                    .optional()
            )
            .optional()
    ),
    company: core.serialization.string().optional(),
    currency: core.serialization.lazy(async () => (await import("../../..")).accounting.CurrencyEnum).optional(),
    account: core.serialization
        .lazy(async () => (await import("../../..")).accounting.ExpenseLineRequestAccount)
        .optional(),
    contact: core.serialization
        .lazy(async () => (await import("../../..")).accounting.ExpenseLineRequestContact)
        .optional(),
    description: core.serialization.string().optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace ExpenseLineRequest {
    interface Raw {
        remote_id?: string | null;
        item?: serializers.accounting.ExpenseLineRequestItem.Raw | null;
        net_amount?: number | null;
        tracking_category?: serializers.accounting.ExpenseLineRequestTrackingCategory.Raw | null;
        tracking_categories?:
            | (serializers.accounting.ExpenseLineRequestTrackingCategoriesItem.Raw | null | undefined)[]
            | null;
        company?: string | null;
        currency?: serializers.accounting.CurrencyEnum.Raw | null;
        account?: serializers.accounting.ExpenseLineRequestAccount.Raw | null;
        contact?: serializers.accounting.ExpenseLineRequestContact.Raw | null;
        description?: string | null;
        exchange_rate?: string | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
