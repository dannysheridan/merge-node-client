/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const CommentRequest: core.serialization.ObjectSchema<
    serializers.ticketing.CommentRequest.Raw,
    Merge.ticketing.CommentRequest
> = core.serialization.object({
    user: core.serialization.string().optional(),
    contact: core.serialization.string().optional(),
    body: core.serialization.string().optional(),
    htmlBody: core.serialization.property("html_body", core.serialization.string().optional()),
    ticket: core.serialization.string().optional(),
    isPrivate: core.serialization.property("is_private", core.serialization.boolean().optional()),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace CommentRequest {
    interface Raw {
        user?: string | null;
        contact?: string | null;
        body?: string | null;
        html_body?: string | null;
        ticket?: string | null;
        is_private?: boolean | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
