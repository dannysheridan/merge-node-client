/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const FileRequest: core.serialization.ObjectSchema<
    serializers.filestorage.FileRequest.Raw,
    Merge.filestorage.FileRequest
> = core.serialization.object({
    name: core.serialization.string().optional(),
    fileUrl: core.serialization.property("file_url", core.serialization.string().optional()),
    fileThumbnailUrl: core.serialization.property("file_thumbnail_url", core.serialization.string().optional()),
    size: core.serialization.number().optional(),
    mimeType: core.serialization.property("mime_type", core.serialization.string().optional()),
    description: core.serialization.string().optional(),
    folder: core.serialization.string().optional(),
    permissions: core.serialization
        .lazy(async () => (await import("../../..")).filestorage.FileRequestPermissions)
        .optional(),
    drive: core.serialization.string().optional(),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace FileRequest {
    interface Raw {
        name?: string | null;
        file_url?: string | null;
        file_thumbnail_url?: string | null;
        size?: number | null;
        mime_type?: string | null;
        description?: string | null;
        folder?: string | null;
        permissions?: serializers.filestorage.FileRequestPermissions.Raw | null;
        drive?: string | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
