/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const ApplicationResponse: core.serialization.ObjectSchema<
    serializers.ats.ApplicationResponse.Raw,
    Merge.ats.ApplicationResponse
> = core.serialization.object({
    model: core.serialization.lazyObject(async () => (await import("../../..")).ats.Application),
    warnings: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).ats.WarningValidationProblem)
    ),
    errors: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).ats.ErrorValidationProblem)
    ),
    logs: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.DebugModeLog))
        .optional(),
});

export declare namespace ApplicationResponse {
    interface Raw {
        model: serializers.ats.Application.Raw;
        warnings: serializers.ats.WarningValidationProblem.Raw[];
        errors: serializers.ats.ErrorValidationProblem.Raw[];
        logs?: serializers.ats.DebugModeLog.Raw[] | null;
    }
}
