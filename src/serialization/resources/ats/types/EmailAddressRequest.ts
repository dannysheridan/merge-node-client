/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const EmailAddressRequest: core.serialization.ObjectSchema<
    serializers.ats.EmailAddressRequest.Raw,
    Merge.ats.EmailAddressRequest
> = core.serialization.object({
    value: core.serialization.string().optional(),
    emailAddressType: core.serialization.property(
        "email_address_type",
        core.serialization
            .lazy(async () => (await import("../../..")).ats.EmailAddressRequestEmailAddressType)
            .optional()
    ),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace EmailAddressRequest {
    interface Raw {
        value?: string | null;
        email_address_type?: serializers.ats.EmailAddressRequestEmailAddressType.Raw | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
