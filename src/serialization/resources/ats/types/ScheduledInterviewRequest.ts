/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const ScheduledInterviewRequest: core.serialization.ObjectSchema<
    serializers.ats.ScheduledInterviewRequest.Raw,
    Merge.ats.ScheduledInterviewRequest
> = core.serialization.object({
    application: core.serialization.string().optional(),
    jobInterviewStage: core.serialization.property("job_interview_stage", core.serialization.string().optional()),
    organizer: core.serialization.string().optional(),
    interviewers: core.serialization.list(core.serialization.string().optional()).optional(),
    location: core.serialization.string().optional(),
    startAt: core.serialization.property("start_at", core.serialization.string().optional()),
    endAt: core.serialization.property("end_at", core.serialization.string().optional()),
    status: core.serialization
        .lazy(async () => (await import("../../..")).ats.ScheduledInterviewRequestStatus)
        .optional(),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace ScheduledInterviewRequest {
    interface Raw {
        application?: string | null;
        job_interview_stage?: string | null;
        organizer?: string | null;
        interviewers?: (string | null | undefined)[] | null;
        location?: string | null;
        start_at?: string | null;
        end_at?: string | null;
        status?: serializers.ats.ScheduledInterviewRequestStatus.Raw | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
