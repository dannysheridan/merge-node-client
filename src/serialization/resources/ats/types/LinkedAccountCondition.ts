/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const LinkedAccountCondition: core.serialization.ObjectSchema<
    serializers.ats.LinkedAccountCondition.Raw,
    Merge.ats.LinkedAccountCondition
> = core.serialization.object({
    conditionSchemaId: core.serialization.property("condition_schema_id", core.serialization.string()),
    commonModel: core.serialization.property("common_model", core.serialization.string().optional()),
    nativeName: core.serialization.property("native_name", core.serialization.string().optional()),
    operator: core.serialization.string(),
    value: core.serialization.unknown().optional(),
    fieldName: core.serialization.property("field_name", core.serialization.string().optional()),
});

export declare namespace LinkedAccountCondition {
    interface Raw {
        condition_schema_id: string;
        common_model?: string | null;
        native_name?: string | null;
        operator: string;
        value?: unknown | null;
        field_name?: string | null;
    }
}
