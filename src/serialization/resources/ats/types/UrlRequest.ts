/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const UrlRequest: core.serialization.ObjectSchema<serializers.ats.UrlRequest.Raw, Merge.ats.UrlRequest> =
    core.serialization.object({
        value: core.serialization.string().optional(),
        urlType: core.serialization.property(
            "url_type",
            core.serialization.lazy(async () => (await import("../../..")).ats.UrlRequestUrlType).optional()
        ),
        integrationParams: core.serialization.property(
            "integration_params",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        linkedAccountParams: core.serialization.property(
            "linked_account_params",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
    });

export declare namespace UrlRequest {
    interface Raw {
        value?: string | null;
        url_type?: serializers.ats.UrlRequestUrlType.Raw | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
