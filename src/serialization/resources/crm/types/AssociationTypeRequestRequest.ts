/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const AssociationTypeRequestRequest: core.serialization.ObjectSchema<
    serializers.crm.AssociationTypeRequestRequest.Raw,
    Merge.crm.AssociationTypeRequestRequest
> = core.serialization.object({
    sourceObjectClass: core.serialization.property(
        "source_object_class",
        core.serialization.lazyObject(async () => (await import("../../..")).crm.ObjectClassDescriptionRequest)
    ),
    targetObjectClasses: core.serialization.property(
        "target_object_classes",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).crm.ObjectClassDescriptionRequest)
        )
    ),
    remoteKeyName: core.serialization.property("remote_key_name", core.serialization.string()),
    displayName: core.serialization.property("display_name", core.serialization.string().optional()),
    cardinality: core.serialization.lazy(async () => (await import("../../..")).crm.CardinalityEnum).optional(),
    isRequired: core.serialization.property("is_required", core.serialization.boolean().optional()),
});

export declare namespace AssociationTypeRequestRequest {
    interface Raw {
        source_object_class: serializers.crm.ObjectClassDescriptionRequest.Raw;
        target_object_classes: serializers.crm.ObjectClassDescriptionRequest.Raw[];
        remote_key_name: string;
        display_name?: string | null;
        cardinality?: serializers.crm.CardinalityEnum.Raw | null;
        is_required?: boolean | null;
    }
}
